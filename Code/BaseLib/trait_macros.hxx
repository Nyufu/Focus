#ifndef _TRAIT_MACROS_HXX_
#define _TRAIT_MACROS_HXX_

#define _X64CAll

#define _EMIT_X64(FUNC, OPT1, OPT2) FUNC(_X64CAll, OPT1, OPT2)

#define _NON_MEMBER_FUNCTION(FUNC, NOEXCEPT_OPT) _EMIT_X64(FUNC, NOEXCEPT_OPT, )

#define _NON_MEMBER_FUNCTION_NOEXCEPT(FUNC) \
	_NON_MEMBER_FUNCTION(FUNC, )            \
	_NON_MEMBER_FUNCTION(FUNC, noexcept)

#define _MEMBER_FUNCTION(FUNC, C_OPT, REF_NOEXCEPT_OPT) _EMIT_X64(FUNC, C_OPT, REF_NOEXCEPT_OPT)

#define _MEMBER_FUNCTION_C(FUNC, REF_NOEXCEPT_OPT) \
	_MEMBER_FUNCTION(FUNC, , REF_NOEXCEPT_OPT)     \
	_MEMBER_FUNCTION(FUNC, const, REF_NOEXCEPT_OPT)

#define _MEMBER_FUNCTION_C_REF(FUNC, NOEXCEPT_OPT) \
	_MEMBER_FUNCTION_C(FUNC, NOEXCEPT_OPT)         \
	_MEMBER_FUNCTION_C(FUNC, &NOEXCEPT_OPT)        \
	_MEMBER_FUNCTION_C(FUNC, &&NOEXCEPT_OPT)

#define _MEMBER_FUNCTION_C_REF_NOEXCEPT(FUNC) \
	_MEMBER_FUNCTION_C_REF(FUNC, )            \
	_MEMBER_FUNCTION_C_REF(FUNC, noexcept)

#define C_REF_SPECIALIZATION(CLASS) \
	CLASS(, )                       \
	CLASS(const, )                  \
	CLASS(, &)                      \
	CLASS(const, &)                 \
	CLASS(, &&)                     \
	CLASS(const, &&)

#endif
